apiVersion: v1
data:
  DATABASE_URL: postgres://staging_user:staging_pass@staging-db:5432/people
  NODE_ENV: staging
kind: ConfigMap
metadata:
  name: myapp-config-b5kt2fdb58
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: myapp
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: myapp-0.1.0
  name: my-release-myapp-backend-service
spec:
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    app: backend
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: myapp
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: myapp
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: myapp-0.1.0
  name: my-release-myapp-frontend
spec:
  ports:
  - nodePort: 30001
    port: 80
    targetPort: 80
  selector:
    app: frontend
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: myapp
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: myapp
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: myapp-0.1.0
  name: my-release-myapp-postgres-service
spec:
  ports:
  - port: 5432
  selector:
    app: postgres
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: myapp
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: myapp
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: myapp-0.1.0
  name: my-release-myapp-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: myapp
  template:
    metadata:
      labels:
        app: backend
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: myapp
    spec:
      containers:
      - env:
        - name: PGUSER
          value: postgres
        - name: PGPASSWORD
          value: password
        - name: PGDATABASE
          value: people
        - name: PGHOST
          value: my-release-myapp-postgres-service
        - name: PGPORT
          value: "5432"
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              key: DATABASE_URL
              name: my-release-myapp-config
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: NODE_ENV
              name: my-release-myapp-config
        image: indhura/backend-image:latest
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: myapp
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: myapp-0.1.0
  name: my-release-myapp-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: myapp
  template:
    metadata:
      labels:
        app: frontend
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: myapp
    spec:
      containers:
      - env:
        - name: VUE_APP_API_URL
          valueFrom:
            configMapKeyRef:
              key: API_URL
              name: my-release-myapp-config
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              key: DATABASE_URL
              name: my-release-myapp-config
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: NODE_ENV
              name: my-release-myapp-config
        image: indhura/frontend-image:latest1
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: myapp
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: myapp-0.1.0
  name: my-release-myapp-postgres
spec:
  replicaCount: null
  selector:
    matchLabels:
      app: postgres
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: myapp
  template:
    metadata:
      labels:
        app: postgres
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: myapp
    spec:
      containers:
      - env:
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: my-release-myapp-config
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: my-release-myapp-config
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DB
              name: my-release-myapp-config
        image: postgres:13
        name: postgres
        ports:
        - containerPort: 5432
